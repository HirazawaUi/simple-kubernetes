- name: Replicate systemd unit for kubelet
  template:
    src: kubelet.service.j2
    dest: /etc/systemd/system/kubelet.service

- name: Enable kubelet service
  systemd:
    name: kubelet.service
    state: restarted
    enabled: yes
    daemon_reload: yes

- name: Wait for api-server activated
  uri:
    url: https://127.0.0.1:6443/healthz
  register: healthy
  until: healthy.status = 200
  retries: 50
  delay: 5

- name: Generate certificate for kube-scheduler
  shell: |
    KUBECONFIG=/etc/kubernetes/kube-scheduler.conf kubectl config set-cluster default-cluster --server=https://{{ master }}:6443 --certificate-authority /etc/kubernetes/pki/ca.crt --embed-certs
    KUBECONFIG=/etc/kubernetes/kube-scheduler.conf kubectl config set-credentials kube-scheduler --client-key /etc/kubernetes/pki/kube-scheduler-key.pem --client-certificate /etc/kubernetes/pki/kube-scheduler.crt --embed-certs
    KUBECONFIG=/etc/kubernetes/kube-scheduler.conf kubectl config set-context default-system --cluster default-cluster --user kube-scheduler
    KUBECONFIG=/etc/kubernetes/kube-scheduler.conf kubectl config use-context default-system

- name: Generate certificate for kube-controller-manager
  shell: |
    KUBECONFIG=/etc/kubernetes/kube-controller-manager.conf kubectl config set-cluster default-cluster --server=https://{{ master }}:6443 --certificate-authority /etc/kubernetes/pki/ca.crt --embed-certs
    KUBECONFIG=/etc/kubernetes/kube-controller-manager.conf kubectl config set-credentials kube-controller-manager --client-key /etc/kubernetes/pki/kube-controller-manager-key.pem --client-certificate /etc/kubernetes/pki/kube-controller-manager.crt --embed-certs
    KUBECONFIG=/etc/kubernetes/kube-controller-manager.conf kubectl config set-context default-system --cluster default-cluster --user kube-controller-manager
    KUBECONFIG=/etc/kubernetes/kube-controller-manager.conf kubectl config use-context default-system

- name: Generate certificate for kube-controller-manager
  shell: |
    KUBECONFIG=/etc/kubernetes/kube-controller-manager.conf kubectl config set-cluster default-cluster --server=https://{{ master }}:6443 --certificate-authority /etc/kubernetes/pki/ca.crt --embed-certs
    KUBECONFIG=/etc/kubernetes/kube-controller-manager.conf kubectl config set-credentials kube-controller-manager --client-key /etc/kubernetes/pki/kube-controller-manager-key.pem --client-certificate /etc/kubernetes/pki/kube-controller-manager.crt --embed-certs
    KUBECONFIG=/etc/kubernetes/kube-controller-manager.conf kubectl config set-context default-system --cluster default-cluster --user kube-controller-manager
    KUBECONFIG=/etc/kubernetes/kube-controller-manager.conf kubectl config use-context default-system

- name: Generate certificate for admin
  shell: |
    KUBECONFIG=/etc/kubernetes/admin.conf kubectl config set-cluster default-cluster --server=https://{{ master }}:6443 --certificate-authority /etc/kubernetes/pki/ca.crt --embed-certs
    KUBECONFIG=/etc/kubernetes/admin.conf kubectl config set-credentials admin --client-key /etc/kubernetes/pki/admin-key.pem --client-certificate /etc/kubernetes/pki/admin.crt --embed-certs
    KUBECONFIG=/etc/kubernetes/admin.conf kubectl config set-context default-system --cluster default-cluster --user admin
    KUBECONFIG=/etc/kubernetes/admin.conf kubectl config use-context default-system

- name: Generate certificate for kubelet
  shell: |
    KUBECONFIG=/etc/kubernetes/kubelet.conf kubectl config set-cluster default-cluster --server=https://{{ master }}:6443 --certificate-authority /etc/kubernetes/pki/ca.crt --embed-certs
    KUBECONFIG=/etc/kubernetes/kubelet.conf kubectl config set-credentials system:node:{{ master }} --client-key /etc/kubernetes/pki/kubelet-{{ master }}-key.pem --client-certificate /etc/kubernetes/pki/kubelet-{{ master }}.pem --embed-certs
    KUBECONFIG=/etc/kubernetes/kubelet.conf kubectl config set-context default-system --cluster default-cluster --user system:node:{{ master }}
    KUBECONFIG=/etc/kubernetes/kubelet.conf kubectl config use-context default-system