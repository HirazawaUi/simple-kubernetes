[master]
# Specify the IP address if no DNS
m1.no.ha.lab.io ansible_host=10.38.1.13
m2.no.ha.lab.io ansible_host=10.38.1.14
m3.no.ha.lab.io ansible_host=10.38.1.15

[nodes]
n1.no.ha.lab.io ansible_host=10.38.1.16
#n1.no.weave.lab.io
#n2.no.weave.lab.io

[localhost]
localhost

[kubernetes_nodes:children]
master
nodes

[all:vars]
kube_release_version = v1.12.2
verify_kube_release = False
kube_release_local = {{ playbook_dir }}/releases/kubernetes-server-linux-amd64.tar.gz
cni_plugins_local = {{ playbook_dir }}/releases/cni-plugins-amd64.tgz

pod_cidr=10.20.0.0/16
service_cidr=10.21.0.0/16
apiserver_vip = 10.38.1.225

keepalived_interface=enp0s3

etcd_image = quay.io/coreos/etcd:v3.2.18

install_coredns = True
coredns_image = coredns/coredns:1.2.6

pod_infra_container_image = kubernetes/pause:latest

install_docker = True
docker_remote_centos = https://download.docker.com/linux/centos/7/x86_64/stable/Packages/docker-ce-18.09.0-3.el7.x86_64.rpm
docker_local_centos = {{ playbook_dir }}/releases/docker.rpm
docker_remote_ubuntu = https://download.docker.com/linux/ubuntu/dists/xenial/pool/stable/amd64/docker-ce_18.09.0~3-0~ubuntu-xenial_amd64.deb
docker_local_ubuntu = {{ playbook_dir }}/releases/docker.dep

[localhost:vars]
ansible_connection=local

pki_path={{ playbook_dir }}/pki
remote_pki_path=/etc/kubernetes/pki
kube_ca_key="{{ pki_path }}/kube-ca-key.pem"
kube_ca_crt="{{ pki_path }}/kube-ca.pem"
kube_ca_csr="{{ pki_path }}/kube-ca-csr.pem"
etcd_ca_key="{{ pki_path }}/etcd-ca-key.pem"
etcd_ca_crt="{{ pki_path }}/etcd-ca.pem"
etcd_ca_csr="{{ pki_path }}/etcd-ca-csr.pem"
kube_front_proxy_ca_key="{{ pki_path }}/kube-front-proxy-ca-key.pem"
kube_front_proxy_ca_crt="{{ pki_path }}/kube-front-proxy-ca.pem"
kube_front_proxy_ca_csr="{{ pki_path }}/kube-front-proxy-ca-csr.pem"
etcd_health_check_cert_key="{{ pki_path }}/etcd-healthcheck-client-key.pem"
etcd_health_check_cert_crt="{{ pki_path }}/etcd-healthcheck-client.pem"
etcd_health_check_cert_csr="{{ pki_path }}/etcd-healthcheck-client-csr.pem"
apiserver_etcd_client_cert_key="{{ pki_path }}/apiserver-etcd-client-key.pem"
apiserver_etcd_client_cert_crt="{{ pki_path }}/apiserver-etcd-client.pem"
apiserver_etcd_client_cert_csr="{{ pki_path }}/apiserver-etcd-client-csr.pem"

service_account_cert_key="{{ pki_path }}/service-account-key.pem"
service_account_cert_crt="{{ pki_path }}/service-account.pem"
service_account_cert_csr="{{ pki_path }}/service-account-csr.pem"

[kubernetes_nodes:vars]
ansible_user=root

local_pki_path={{ playbook_dir }}/pki
pki_path=/etc/kubernetes/pki
manifest_path=/etc/kubernetes/manifests
kube_ca_key="{{ pki_path }}/kube-ca-key.pem"
kube_ca_crt="{{ pki_path }}/kube-ca.pem"
kube_ca_csr="{{ pki_path }}/kube-ca-csr.pem"
etcd_ca_key="{{ pki_path }}/etcd-ca-key.pem"
etcd_ca_crt="{{ pki_path }}/etcd-ca.pem"
etcd_ca_csr="{{ pki_path }}/etcd-ca-csr.pem"
kube_front_proxy_ca_key="{{ pki_path }}/kube-front-proxy-ca-key.pem"
kube_front_proxy_ca_crt="{{ pki_path }}/kube-front-proxy-ca.pem"
kube_front_proxy_ca_csr="{{ pki_path }}/kube-front-proxy-ca-csr.pem"
#etcd_cert_key="{{ pki_path }}/kube-etcd-server-key.pem"
#etcd_cert_crt="{{ pki_path }}/kube-etcd-server.pem"
#etcd_cert_csr="{{ pki_path }}/kube-etcd-server-csr.pem"
etcd_health_check_cert_key="{{ pki_path }}/etcd-healthcheck-client-key.pem"
etcd_health_check_cert_crt="{{ pki_path }}/etcd-healthcheck-client.pem"
etcd_health_check_cert_csr="{{ pki_path }}/etcd-healthcheck-client-csr.pem"
apiserver_etcd_client_cert_key="{{ pki_path }}/apiserver-etcd-client-key.pem"
apiserver_etcd_client_cert_crt="{{ pki_path }}/apiserver-etcd-client.pem"
apiserver_etcd_client_cert_csr="{{ pki_path }}/apiserver-etcd-client-csr.pem"
apiserver_cert_key="{{ pki_path }}/kube-api-server-key.pem"
apiserver_cert_crt="{{ pki_path }}/kube-api-server.pem"
apiserver_cert_csr="{{ pki_path }}/kube-api-server-csr.pem"
kubelet_client_cert_key="{{ pki_path }}/apiserver-kubelet-client-key.pem"
kubelet_client_cert_crt="{{ pki_path }}/apiserver-kubelet-client.pem"
kubelet_client_cert_csr="{{ pki_path }}/apiserver-kubelet-client-csr.pem"
controller_manager_cert_key="{{ pki_path }}/kube-controller-manager-key.pem"
controller_manager_cert_crt="{{ pki_path }}/kube-controller-manager.pem"
controller_manager_cert_csr="{{ pki_path }}/kube-controller-manager-csr.pem"
scheduler_cert_key="{{ pki_path }}/kube-scheduler-key.pem"
scheduler_cert_crt="{{ pki_path }}/kube-scheduler.pem"
scheduler_cert_csr="{{ pki_path }}/kube-scheduler-csr.pem"
admin_cert_key="{{ pki_path }}/admin-key.pem"
admin_cert_crt="{{ pki_path }}/admin.pem"
admin_cert_csr="{{ pki_path }}/admin-csr.pem"
kube_front_proxy_client_cert_key="{{ pki_path }}/kube-front-proxy-client-key.pem"
kube_front_proxy_client_cert_crt="{{ pki_path }}/kube-front-proxy-client.pem"
kube_front_proxy_client_cert_csr="{{ pki_path }}/kube-front-proxy-client-csr.pem"
service_account_cert_key="{{ pki_path }}/service-account-key.pem"
service_account_cert_crt="{{ pki_path }}/service-account.pem"
service_account_cert_csr="{{ pki_path }}/service-account-csr.pem"
remote_kubelet_certs_path="/tmp/kubelet-cert"
ha_home="/etc/kubernetes/ha"